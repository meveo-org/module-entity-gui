[ {
  "active" : true,
  "code" : "EntityGUIModule",
  "description" : "Entity GUI Module",
  "license" : "GPL",
  "currentVersion" : "0.0.1",
  "transient" : true,
  "inDraft" : true,
  "codeOnly" : false,
  "moduleItems" : [ {
    "dtoClassName" : "org.meveo.api.dto.notification.ScriptNotificationDto",
    "dtoData" : {
      "active" : true,
      "code" : "GenerateCustomEntityGUI",
      "classNameFilter" : "org.meveo.model.customEntities.CustomEntityInstance",
      "eventTypeFilter" : "CREATED",
      "elFilter" : "#{event.getCetCode() == 'ENTITY_GUI_CONFIG'}",
      "scriptInstanceCode" : "org.meveo.script.GenerateCustomEntityGUIScript",
      "scriptParams" : {
        "config" : "${event}"
      },
      "priority" : 1
    }
  }, {
    "dtoClassName" : "org.meveo.api.dto.CustomEntityTemplateDto",
    "dtoData" : {
      "code" : "ENTITY_GUI_CONFIG",
      "name" : "Entity UI Application Configuration",
      "description" : "Create GUI for a Custom Entity",
      "customEntityCategoryCode" : "ENTITY_UI",
      "availableStorages" : [ "SQL" ],
      "sqlStorageConfiguration" : {
        "storeAsTable" : false
      },
      "samples" : [ ],
      "fields" : [ {
        "code" : "label",
        "description" : "The label that shows up for menu's and notifications regarding this entity",
        "fieldType" : "STRING",
        "accountLevel" : "CE_ENTITY_GUI_CONFIG",
        "appliesTo" : "CE_ENTITY_GUI_CONFIG",
        "useInheritedAsDefaultValue" : false,
        "storageType" : "SINGLE",
        "valueRequired" : true,
        "versionable" : false,
        "triggerEndPeriodEvent" : false,
        "listValues" : { },
        "allowEdit" : true,
        "hideOnNew" : false,
        "maxValue" : 255,
        "contentTypes" : [ ],
        "fileExtensions" : [ ],
        "saveOnExplorer" : false,
        "guiPosition" : "tab:Entity UI Application Configuration:0;field:1",
        "identifier" : false,
        "storages" : [ "SQL" ],
        "samples" : [ ],
        "summary" : false,
        "filter" : false,
        "unique" : false,
        "matrixColumns" : [ ]
      }, {
        "code" : "name",
        "description" : "The Entity's name",
        "fieldType" : "STRING",
        "accountLevel" : "CE_ENTITY_GUI_CONFIG",
        "appliesTo" : "CE_ENTITY_GUI_CONFIG",
        "useInheritedAsDefaultValue" : false,
        "storageType" : "SINGLE",
        "valueRequired" : true,
        "versionable" : false,
        "triggerEndPeriodEvent" : false,
        "listValues" : { },
        "allowEdit" : true,
        "hideOnNew" : false,
        "maxValue" : 255,
        "contentTypes" : [ ],
        "fileExtensions" : [ ],
        "saveOnExplorer" : false,
        "guiPosition" : "tab:Entity UI Application Configuration:0;field:0",
        "identifier" : false,
        "storages" : [ "SQL" ],
        "samples" : [ ],
        "summary" : false,
        "filter" : false,
        "unique" : false,
        "matrixColumns" : [ ]
      } ],
      "actions" : [ ]
    }
  }, {
    "dtoClassName" : "org.meveo.api.dto.ScriptInstanceDto",
    "dtoData" : {
      "active" : true,
      "code" : "org.meveo.script.GenerateCustomEntityGUIScript",
      "description" : "GenerateCustomEntityGUIScript",
      "inputs" : [ ],
      "outputs" : [ ],
      "generateOutputs" : false,
      "type" : "JAVA",
      "script" : "package org.meveo.script;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.LinkOption;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.nio.file.StandardCopyOption;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\nimport java.util.stream.Collectors;\r\nimport java.util.stream.Stream;\r\n\r\nimport org.meveo.service.script.Script;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.commons.utils.FileUtils;\r\nimport org.meveo.commons.utils.ParamBean;\r\nimport org.meveo.commons.utils.ParamBeanFactory;\r\nimport org.meveo.model.BusinessEntity;\r\nimport org.meveo.model.customEntities.CustomEntityInstance;\r\nimport org.meveo.model.customEntities.CustomEntityTemplate;\r\nimport org.meveo.model.git.GitRepository;\r\nimport org.meveo.security.MeveoUser;\r\nimport org.meveo.service.custom.CustomEntityInstanceService;\r\nimport org.meveo.service.custom.CustomEntityTemplateService;\r\nimport org.meveo.service.git.GitClient;\r\nimport org.meveo.service.git.GitHelper;\r\nimport org.meveo.service.git.GitRepositoryService;\r\nimport org.meveo.service.git.MeveoRepository;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class GenerateCustomEntityGUIScript extends Script {\r\n\r\n    private static final String REPOSITORY_NAME = \"custom_entity\";\r\n    private static final Logger LOG = LoggerFactory.getLogger(GenerateCustomEntityGUIScript.class);\r\n    private CustomEntityInstanceService customEntityInstanceService = getCDIBean(CustomEntityInstanceService.class);\r\n    private CustomEntityTemplateService customEntityTemplateService = getCDIBean(CustomEntityTemplateService.class);\r\n    private GitRepositoryService gitRepositoryService = getCDIBean(GitRepositoryService.class);\r\n    private GitClient gitClient = getCDIBean(GitClient.class);\r\n    private GitRepository entityGUIRepository;\r\n    private CustomEntityInstance config;\r\n    private MeveoUser currentUser;\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> parameters) throws BusinessException {\r\n        super.execute(parameters);\r\n\r\n        LOG.debug(\"GenerateCustomEntityGUIScript ==> START\");\r\n\r\n        config = (CustomEntityInstance) parameters.get(\"config\");\r\n        currentUser = (MeveoUser) parameters.get(CONTEXT_CURRENT_USER);\r\n\r\n        LOG.debug(\"ENTITY CONFIG: {}\", config.toString());\r\n\r\n        setup();\r\n\r\n        LOG.debug(\"GenerateCustomEntityGUIScript ==> END\");\r\n    }\r\n\r\n    private void setup() throws BusinessException {\r\n        entityGUIRepository = gitRepositoryService.findByCode(REPOSITORY_NAME);\r\n        if (entityGUIRepository == null) {\r\n            ParamBeanFactory paramBeanFactory = getCDIBean(ParamBeanFactory.class);\r\n            ParamBean appConfig = paramBeanFactory.getInstance();\r\n\r\n            String remoteUrl = appConfig.getProperty(\"meveo.git.directory.remote.url\", null);\r\n            String remoteUsername = appConfig.getProperty(\"meveo.git.directory.remote.username\", null);\r\n            String remotePassword = appConfig.getProperty(\"meveo.git.directory.remote.password\", null);\r\n\r\n            entityGUIRepository = new GitRepository();\r\n            entityGUIRepository.setCode(REPOSITORY_NAME);\r\n            entityGUIRepository.setRemoteOrigin(remoteUrl);\r\n            entityGUIRepository.setDefaultRemoteUsername(remoteUsername);\r\n            entityGUIRepository.setDefaultRemotePassword(remotePassword);\r\n\r\n            gitRepositoryService.create(entityGUIRepository);\r\n\r\n            // save reference to new git repository\r\n            entityGUIRepository = gitRepositoryService.findByCode(REPOSITORY_NAME);\r\n        }\r\n        File repositoryDirectory = GitHelper.getRepositoryDir(this.currentUser, entityGUIRepository.getCode());\r\n        Path repositoryPath = repositoryDirectory.toPath();\r\n\r\n        LOG.debug(\"repository path: {}\", repositoryPath.toString());\r\n\r\n        // add template files\r\n        CustomEntityTemplate templatePathCET = customEntityTemplateService.findByCodeOrDbTablename(\"TEMPLATE_PATH\");\r\n        CustomEntityInstance templatePathCEI = customEntityInstanceService.findByCodeByCet(templatePathCET.getCode(),\r\n                \"ENTITY_GUI_TEMPLATE_PATH\");\r\n        String templatePath = templatePathCEI.getCfValuesNullSafe().getCfValue(\"path\").getStringValue();\r\n        File templatesDirectory = new File(templatePath);\r\n        Path templatesPath = templatesDirectory.toPath();\r\n\r\n        LOG.debug(\"templates path: {}\", templatesPath.toString());\r\n\r\n        try (Stream<Path> sourceStream = Files.walk(templatesPath)) {\r\n            List<Path> sources = sourceStream.collect(Collectors.toList());\r\n            List<Path> destinations = sources.stream().map(templatesPath::relativize).map(repositoryPath::resolve)\r\n                    .collect(Collectors.toList());\r\n\r\n            List<File> filesToCommit = new ArrayList<>();\r\n\r\n            for (int index = 0; index < sources.size(); index++) {\r\n                Path sourcePath = sources.get(index);\r\n                Path destinationPath = destinations.get(index);\r\n                LOG.debug(\"COPYING: {}\", sourcePath.toString());\r\n                LOG.debug(\"TO: {}\", destinationPath.toString());\r\n                File destinationFile = new File(destinationPath.toString());\r\n                if (!destinationFile.isDirectory()) {\r\n                    Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING,\r\n                            StandardCopyOption.COPY_ATTRIBUTES);\r\n                    filesToCommit.add(destinationFile);\r\n                }\r\n            }\r\n            if (filesToCommit.size() > 0) {\r\n                gitClient.commitFiles(entityGUIRepository, filesToCommit, \"Initialize Entity GUI template\");\r\n            }\r\n        } catch (IOException ioe) {\r\n            throw new BusinessException(ioe);\r\n        }\r\n\r\n        LOG.debug(\"templates path: {}\", templatePath);\r\n    }\r\n}\r\n",
      "executionRoles" : [ ],
      "sourcingRoles" : [ ],
      "mavenDependencies" : [ ],
      "importScriptInstances" : [ ]
    }
  }, {
    "dtoClassName" : "org.meveo.api.dto.CustomEntityCategoryDto",
    "dtoData" : {
      "code" : "ENTITY_UI",
      "name" : "Entity GUI"
    }
  } ],
  "moduleDependencies" : [ ],
  "moduleFiles" : [ ]
} ]